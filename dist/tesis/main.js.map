{"version":3,"sources":["./src/app/src/auth/components/modal-forget-password/modal-forget-password.component.ts","./src/app/src/auth/components/modal-forget-password/modal-forget-password.component.html","fs (ignored)","crypto (ignored)","stream (ignored)","./src/app/src/shared/services/reports/reports.service.ts","./src/app/src/shared/pipes/exportExcel/export-excel.pipe.ts","./src/environments/environment.ts","./src/app/src/shared/material/material.module.ts","./src/app/src/featured-modules/components/layout/layout.component.ts","./src/app/src/featured-modules/components/layout/layout.component.html","./src/app/src/featured-modules/components/prediccion/prediccion.component.ts","./src/app/src/featured-modules/components/prediccion/prediccion.component.html","./src/app/src/shared/services/products/products.service.ts","./src/app/src/shared/services/clientes/clientes.service.ts","./src/app/src/featured-modules/featured-modules-routing.module.ts","./src/app/src/featured-modules/components/usuarios/usuarios.component.ts","./src/app/src/featured-modules/components/usuarios/usuarios.component.html","./src/app/src/auth/components/login/login.component.ts","./src/app/src/auth/components/login/login.component.html","./src/app/src/auth/auth-routing.module.ts","./src/app/src/featured-modules/components/home/home.component.ts","./src/app/src/featured-modules/components/home/home.component.html","./src/app/src/shared/guards/login/login.guard.ts","./src/app/src/auth/auth.module.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/src/featured-modules/components/clientes/clientes.component.ts","./src/app/src/featured-modules/components/clientes/clientes.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/src/shared/data/layout.ts","./src/app/src/featured-modules/components/modals/modal-client-edit/modal-client-edit.component.ts","./src/app/src/featured-modules/components/modals/modal-client-edit/modal-client-edit.component.html","./src/app/src/shared/pipes/randomColor/random-color.pipe.ts","./src/app/app.module.ts","./src/app/src/shared/services/auth/login.service.ts","./src/app/src/featured-modules/components/ventas/ventas.component.ts","./src/app/src/featured-modules/components/ventas/ventas.component.html","./src/app/src/shared/services/usuarios/usuarios.service.ts","./src/app/src/featured-modules/components/inventario/inventario.component.ts","./src/app/src/featured-modules/components/inventario/inventario.component.html","./src/app/src/featured-modules/components/reportes/reportes.component.ts","./src/app/src/featured-modules/components/reportes/reportes.component.html","./src/app/src/shared/services/predictions/predictions.service.ts","./src/app/src/shared/services/purchases/purchases.service.ts","./src/app/src/featured-modules/featured-modules.module.ts","./src/app/app-routing.module.ts","./src/app/src/shared/services/ventas/ventas.service.ts","./src/app/src/shared/data/chart.ts","./src/app/src/featured-modules/components/ordencompra/ordencompra.component.ts","./src/app/src/featured-modules/components/ordencompra/ordencompra.component.html","./src/app/src/featured-modules/components/modals/modal-usuario-edit/modal-usuario-edit.component.ts","./src/app/src/featured-modules/components/modals/modal-usuario-edit/modal-usuario-edit.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from './../../../shared/services/auth/login.service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-modal-forget-password',\n  templateUrl: './modal-forget-password.component.html',\n  styleUrls: ['./modal-forget-password.component.scss'],\n})\nexport class ModalForgetPasswordComponent implements OnInit {\n  constructor(\n    private loginService: LoginService,\n    public dialogRef: MatDialogRef<ModalForgetPasswordComponent>\n  ) {}\n\n  ngOnInit(): void {}\n  userForm = new FormGroup({\n    username: new FormControl(''),\n  });\n\n  resetPassword(event: Event) {\n    //console.logthis.userForm.value);\n\n    this.loginService\n      .resetPassword(this.userForm.value)\n      .subscribe((response) => {\n        if (response) {\n          //console.logresponse);\n\n          this.dialogRef.close(true);\n        } else {\n          this.dialogRef.close(false);\n        }\n      });\n  }\n}\n","<h1>Olvide mi contraseña</h1>\n<form action=\"\" [formGroup]=\"userForm\" (ngSubmit)=\"resetPassword($event)\">\n    <div class=\"distribucion\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>Usuario</mat-label>\n            <input matInput placeholder=\"Nombre de Usuario\" formControlName=\"username\"  required>\n           \n          </mat-form-field>\n        <button\n       \n        mat-raised-button\n        type=\"submit\"\n      >\n      Restablecer mi contraseña\n      </button>\n    </div>\n   \n</form>","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from '../auth/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportsService {\n\n  constructor( private http:HttpClient,\n    private authSession: LoginService) { }\n\n    listReport(){\n      return this.http.post(`${environment.url}/api/v1/reports/list`,{},{\n        headers: this.authSession.headerSession(),\n      });\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as XLSX from 'xlsx';\n\n@Pipe({\n  name: 'exportExcel',\n})\nexport class ExportExcelPipe implements PipeTransform {\n  transform(name: any, html: any) {\n    let element = document.getElementById(html);\n    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(element);\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n    XLSX.writeFile(wb, name);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url: 'http://20.65.44.118:5000',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { FormsModule } from '@angular/forms';\n\nconst materialModules = [\n  A11yModule,\n  ClipboardModule,\n  CdkStepperModule,\n  CdkTableModule,\n  CdkTreeModule,\n  DragDropModule,\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatStepperModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  OverlayModule,\n  PortalModule,\n  ScrollingModule,\n  FormsModule,\n];\n\nconst elements = [];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, materialModules],\n  exports: [materialModules],\n})\nexport class MaterialModule {}\n","import { LoginService } from './../../../shared/services/auth/login.service';\nimport { Component, OnInit } from '@angular/core';\nimport { admin, client, superadmin } from 'src/app/src/shared/data/layout';\nimport { permission } from 'src/app/src/shared/interfaces/authLogin';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  public data: Array<permission> = [];\n  public now: number = 0;\n\n  constructor(private loginService: LoginService, private router: Router) {}\n\n  ngOnInit(): void {\n    const value = sessionStorage.getItem('view');\n    switch (parseInt(`${sessionStorage.getItem('view')}`)) {\n      case 2:\n        this.data = admin;\n        this.now = admin[0].id;\n        break;\n      case 3:\n        this.data = client;\n        this.now = client[0].id;\n        break;\n      default:\n        this.data = superadmin;\n        this.now = superadmin[0].id;\n        break;\n    }\n  }\n\n  nowClick(data: number): void {\n    this.now = data;\n    if (data === 8) {\n      this.loginService.logout();\n      this.router.navigate(['/']);\n    }\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <button (click)=\"drawer.toggle()\" mat-icon-button>\n    <mat-icon>menu</mat-icon>\n  </button>\n  <span>Laboratorio de Células Madres</span>\n</mat-toolbar>\n\n<mat-drawer-container>\n  <mat-drawer #drawer mode=\"side\">\n    <section *ngFor=\"let i of data\">\n      <div (click)=\"nowClick(i.id)\">{{ i.name }}</div>\n    </section>\n  </mat-drawer>\n\n  <div [ngSwitch]=\"now\">\n    <div *ngSwitchCase=\"0\"><app-home></app-home></div>\n    <!-- <div *ngSwitchCase=\"0\"><app-home></app-home></div> -->\n    <div *ngSwitchCase=\"1\"><app-usuarios></app-usuarios></div>\n    <div *ngSwitchCase=\"2\"><app-clientes></app-clientes></div>\n    <div *ngSwitchCase=\"3\"><app-ventas></app-ventas></div>\n    <div *ngSwitchCase=\"4\"><app-prediccion></app-prediccion></div>\n    <div *ngSwitchCase=\"5\"><app-reportes></app-reportes></div>\n    <div *ngSwitchCase=\"6\"><app-ordencompra></app-ordencompra></div>\n    <div *ngSwitchCase=\"7\"><app-inventario></app-inventario></div>\n  </div>\n</mat-drawer-container>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Chart } from 'chart.js';\nimport { ChartData, TablePrediction } from 'src/app/src/shared/data/chart';\nimport { PredictionList } from 'src/app/src/shared/interfaces/predictions';\nimport { ExportExcelPipe } from 'src/app/src/shared/pipes/exportExcel/export-excel.pipe';\nimport { RandomColorPipe } from 'src/app/src/shared/pipes/randomColor/random-color.pipe';\nimport { PredictionsService } from 'src/app/src/shared/services/predictions/predictions.service';\n\n@Component({\n  selector: 'app-prediccion',\n  templateUrl: './prediccion.component.html',\n  styleUrls: ['./prediccion.component.scss'],\n})\nexport class PrediccionComponent implements OnInit {\n  // Filter\n  public nameFilter!: string;\n\n  // Table\n  public datos: Array<PredictionList> = [];\n  public displayedColumns: Array<string> = TablePrediction;\n  public dataSource = this.datos;\n\n  // ChartJS\n  public canvas: any;\n  public ctx: any;\n  public labels: Array<string> = ChartData;\n  public dataCases: any = {\n    chart1: [2000, 10000, 12000, 300, 6000, 0, 0, 100, 0, 0, 0, 0],\n    chart2: [200, 1000, 1200, 1400, 600, 0, 0, 0, 0, 0, 0, 0],\n  };\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator;\n  constructor(private authPrediction: PredictionsService) {}\n\n  ngOnInit(): void {\n    this.authPrediction.list().subscribe(\n      (datos) => {\n        this.datos = JSON.parse(JSON.stringify(datos))\n          .response as Array<PredictionList>;\n        this.dataSource = this.datos;\n        this.createLineChart();\n      },\n      (error) => {\n        this.createLineChart();\n      }\n    );\n  }\n\n  public createLineChart(): void {\n    this.canvas = document.getElementById('myChart');\n    this.ctx = this.canvas.getContext('2d');\n\n    let chart = new Chart(this.ctx, {\n      type: 'line',\n      data: {\n        labels: this.labels,\n        datasets: [\n          {\n            label: 'Presición mensual',\n            data: this.getDataPresicion(),\n            backgroundColor: new RandomColorPipe().transform(),\n            fill: false,\n            borderWidth: 2,\n          },\n        ],\n      },\n      options: {\n        title: {\n          display: false,\n          text: 'First chart',\n        },\n        tooltips: {\n          mode: 'index',\n          intersect: true,\n        },\n        hover: {\n          mode: 'nearest',\n          intersect: true,\n        },\n      },\n    });\n  }\n\n  private getDataPresicion(): Array<number> {\n    var data: Array<number> = [];\n\n    for (let index = 0; index < this.datos.length; index++) {\n      data.push(this.datos[index].PRECISION_MODELO);\n    }\n\n    return data;\n  }\n\n  public applyFilter(): void {\n    this.dataSource = this.datos.filter(\n      (i) =>\n        i.ID_RESULTADO_MODELO.toString().includes(this.nameFilter) ||\n        i.NOMBRE.toLowerCase().includes(this.nameFilter) ||\n        i.PRECISION_MODELO.toString().includes(this.nameFilter) ||\n        i.PREDICCION.toString().includes(this.nameFilter)\n    );\n  }\n\n  exportexcel() {\n    new ExportExcelPipe().transform('prediccion.xlsx', 'excel-prediccion');\n  }\n}\n","<div class=\"container\">\n  <div class=\"content\">\n    <div class=\"botones\">\n      <h1 class=\"titulo\">PREDICCIONES</h1>\n      <button (click)=\"exportexcel()\" class=\"btn-color\" mat-raised-button >\n        Exportar Datos\n      </button>\n    </div>\n    <div class=\"filter\">\n      <mat-form-field>\n        <mat-label>Filtrar</mat-label>\n        <input\n          matInput\n          (keyup)=\"applyFilter()\"\n          [(ngModel)]=\"nameFilter\"\n          placeholder=\"Filtrar\"\n          #input\n        />\n      </mat-form-field>\n    </div>\n\n    <table\n      id=\"excel-prediccion\"\n      class=\"mt-12\"\n      mat-table\n      [dataSource]=\"dataSource\"\n    >\n      <ng-container matColumnDef=\"ID_RESULTADO_MODELO\">\n        <th mat-header-cell *matHeaderCellDef>ID</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.ID_RESULTADO_MODELO }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"NOMBRE\">\n        <th mat-header-cell *matHeaderCellDef>Nombre</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.NOMBRE }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"PRECISION_MODELO\">\n        <th mat-header-cell *matHeaderCellDef>Precisión</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.PRECISION_MODELO }}\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"PREDICCION\">\n        <th mat-header-cell *matHeaderCellDef>Predicción</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element.PREDICCION }}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n    <mat-paginator\n      [pageSizeOptions]=\"[5, 10, 25, 100]\"\n      showFirstLastButtons\n    ></mat-paginator>\n  </div>\n  <canvas id=\"myChart\" class=\"canvas1\"></canvas>\n \n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from '../auth/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductsService {\n\n  constructor(private authSession:LoginService,private http:HttpClient) { }\n  listProducts(){\n    return this.http.post(`${environment.url}/api/v1/products/list`,{},{\n      headers: this.authSession.headerSession(),\n    });\n  }\n  addProduct(data:any){\n    return this.http.post(`${environment.url}/api/v1/products/add`,data,{\n      headers: this.authSession.headerSession(),\n    });\n  }\n  deleteProduct(data:any){\n    return this.http.post(`${environment.url}/api/v1/products/delete`,data,{\n      headers: this.authSession.headerSession(),\n    });\n  }\n}\n","import { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from '../auth/login.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  constructor(  private http:HttpClient,\n    private authSession: LoginService) { }\n\n    listClients(){\n      return this.http.post(`${environment.url}/api/v1/clients/list`,{},{\n        headers: this.authSession.headerSession(),\n      });\n    }\n    addClients(data:any){\n      return this.http.post(`${environment.url}/api/v1/clients/add`,data,{\n        headers: this.authSession.headerSession(),\n      });\n    }\n    deleteClients(data:any){\n      return this.http.post(`${environment.url}/api/v1/clients/delete`,data,{\n        headers: this.authSession.headerSession(),\n      });\n    }\n    editClients(data:any){\n      return this.http.post(`${environment.url}/api/v1/clients/update`,data,{\n        headers: this.authSession.headerSession(),\n      });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { LayoutComponent } from './components/layout/layout.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FeaturedModulesRoutingModule {}\n","import { ResponseClient } from './../../../shared/interfaces/client';\nimport { Component, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { authLogin } from 'src/app/src/shared/interfaces/authLogin';\nimport { ListClient } from 'src/app/src/shared/interfaces/client';\nimport { LoginService } from 'src/app/src/shared/services/auth/login.service';\nimport { DateAdapter } from '@angular/material/core';\nimport { UsuariosService } from './../../../shared/services/usuarios/usuarios.service';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalUsuarioEditComponent } from './../modals/modal-usuario-edit/modal-usuario-edit.component';\nimport { ExportExcelPipe } from 'src/app/src/shared/pipes/exportExcel/export-excel.pipe';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.scss'],\n})\nexport class UsuariosComponent implements OnInit {\n  hide = true;\n  public nameFilter!: string;\n  userForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n    nombre: new FormControl(''),\n    apellido: new FormControl(''),\n    userType: new FormControl(''),\n  });\n\n  public displayedColumns: string[] = [\n    'ID',\n    'Nombre',\n    'Apellido',\n    'Fecha de Creación',\n    'Opcions',\n  ];\n  public datos: Array<ResponseClient> = [];\n  public dataSource = this.datos;\n\n  public paginator!: MatPaginator;\n  public sort!: MatSort;\n\n  constructor(\n    private authService: LoginService,\n    private usuariosService: UsuariosService,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.getData();\n    // this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n  }\n  token: string = 'jdkasjdlakjdlasd###';\n\n  getData() {\n    this.authService.listUser().subscribe((datos) => {\n      //console.logdatos);\n      this.datos = JSON.parse(JSON.stringify(datos))\n        .response as Array<ResponseClient>;\n      this.dataSource = this.datos;\n    });\n  }\n  saveUser(event: Event) {\n    event.preventDefault();\n    if (this.userForm.valid) {\n      const user = this.userForm.value;\n      //console.loguser);\n\n      this.usuariosService.createUser(user).subscribe((response) => {\n        //console.logresponse);\n        // this.router.navigate(['./admin/products']);\n        this.userForm.reset();\n        this.getData();\n      });\n    }\n  }\n\n  public applyFilter(): void {\n    // this.dataSource.includes(this.nameFilter.toLowerCase());\n    this.dataSource = this.datos.filter(\n      (i) =>\n        i.ID_USUARIO.toString().includes(this.nameFilter.toLowerCase()) ||\n        i.NOMBRE.toLowerCase().includes(this.nameFilter.toLowerCase()) ||\n        i.APELLIDO.toString().includes(this.nameFilter.toLowerCase()) ||\n        i.FECHA_CREACION.toString().includes(this.nameFilter.toLowerCase())\n    );\n  }\n\n  createNewUser(id: number): ResponseClient {\n    return {\n      APELLIDO: 'string',\n      FECHA_CREACION: 'string',\n      ID_ROL: 1,\n      ID_USUARIO: 2,\n      NOMBRE: 'string',\n      USERNAME: 'string',\n    };\n  }\n  deleteUser(id: any) {\n    let data = {\n      userid: id,\n    };\n    //console.logdata);\n\n    this.usuariosService.deleteUser(data).subscribe((rpta) => {\n      this.getData();\n      // const index = this.dataSource.findIndex((user) => {\n      //   user.ID_USUARIO === parseInt(id);\n      //   //console.log user.ID_USUARIO);\n      //   //console.log id);\n      // });\n\n      // //console.logindex);\n\n      // this.dataSource.splice(index, 1);\n      // this.dataSource = [...this.dataSource];\n    });\n  }\n  openDialog(row: any) {\n    //console.logrow);\n\n    const editModal = this.dialog.open(ModalUsuarioEditComponent, {\n      data: row,\n      minWidth: '400px',\n      maxWidth: '800px',\n    });\n    editModal.afterClosed().subscribe((result) => {\n      result\n        ? this.getData()\n        : console.log('cancelaste el modal o hubo un error');\n    });\n  }\n\n  exportexcel() {\n    new ExportExcelPipe().transform('usuarios.xlsx', 'excel-usuarios');\n  }\n}\n","<div class=\"container\">\n  <div class=\"content\">\n    <div class=\"botones\">\n      <button (click)=\"exportexcel()\" class=\"btn-color\" mat-raised-button>Exportar Datos</button>\n    </div>\n    <div class=\"formulario\">\n      <form [formGroup]=\"userForm\" (ngSubmit)=\"saveUser($event)\">\n        <mat-card class=\"formu\">\n          <mat-card-header>\n            <mat-card-title>Agregar Usuario</mat-card-title>\n          </mat-card-header>\n          <mat-card-content class=\"Formcontent\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Usuario</mat-label>\n              <input\n                placeholder=\"Usuario\"\n                formControlName=\"username\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Contraseña</mat-label>\n              <input formControlName=\"password\" matInput [type]=\"hide ? 'password' : 'text'\" />\n              <button\n                mat-icon-button\n                matSuffix\n                (click)=\"hide = !hide\"\n                [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hide\"\n              >\n                <mat-icon>{{\n                  hide ? \"visibility_off\" : \"visibility\"\n                }}</mat-icon>\n              </button>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Nombre</mat-label>\n              <input\n                placeholder=\"Nombre\"\n                formControlName=\"nombre\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Apellidos</mat-label>\n              <input\n                placeholder=\"Apellido\"\n                formControlName=\"apellido\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Tipo de usuario</mat-label>\n              <mat-select formControlName=\"userType\">\n                <mat-option value=\"1\">Admin</mat-option>\n                <mat-option value=\"2\">Compras</mat-option>\n                <mat-option value=\"3\">Ventas</mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <!-- <mat-form-field appearance=\"fill\">\n              <mat-label>Tipo de Usuario</mat-label>\n              <input\n                placeholder=\"Tipo de usuario\"\n                formControlName=\"userType\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field> -->\n            \n          </mat-card-content>\n          <mat-card-actions>\n            <button\n              [disabled]=\"userForm.invalid\"\n              mat-raised-button\n              type=\"submit\"\n            >\n              Guardar\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </form>\n    </div>\n    <div class=\"lista\">\n      <h1>Lista de Usuarios</h1>\n      <div class=\"filter\">\n        <mat-form-field>\n          <mat-label>Filtrar</mat-label>\n          <input\n            matInput\n            (keyup)=\"applyFilter()\"\n            [(ngModel)]=\"nameFilter\"\n            placeholder=\"Filtrar\"\n            #input\n          />\n        </mat-form-field>\n      </div>\n\n      <div class=\"mat-elevation-z8\">\n        <table id=\"excel-usuarios\" mat-table [dataSource]=\"dataSource\">\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"ID\">\n            <th mat-header-cell *matHeaderCellDef>ID</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.ID_USUARIO }}</td>\n          </ng-container>\n\n          <!-- Progress Column -->\n          <ng-container matColumnDef=\"Nombre\">\n            <th mat-header-cell *matHeaderCellDef>Nombre</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.NOMBRE }}</td>\n          </ng-container>\n\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"Apellido\">\n            <th mat-header-cell *matHeaderCellDef>Apellido</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.APELLIDO }}</td>\n          </ng-container>\n\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"Fecha de Creación\">\n            <th mat-header-cell *matHeaderCellDef>Fecha de creación</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.FECHA_CREACION }}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"Opcions\">\n            <th mat-header-cell *matHeaderCellDef>Opcions</th>\n            <td mat-cell *matCellDef=\"let row\">\n              <button mat-raised-button class=\"mr-1\" (click)=\"openDialog(row)\">\n                Editar\n              </button>\n              <button\n                mat-raised-button\n                (click)=\"deleteUser(row.ID_USUARIO)\"\n                color=\"warn\"\n              >\n                Eliminar\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n\n        <mat-paginator\n          [pageSizeOptions]=\"[5, 10, 25, 100]\"\n          showFirstLastButtons\n        ></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  authLogin,\n  responseLogin,\n} from 'src/app/src/shared/interfaces/authLogin';\nimport { LoginService } from 'src/app/src/shared/services/auth/login.service';\nimport { ModalForgetPasswordComponent } from './../modal-forget-password/modal-forget-password.component';\nimport { MatDialog } from '@angular/material/dialog';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  public data: authLogin = {\n    username: '',\n    password: '',\n  };\n\n  constructor(\n    private authService: LoginService,\n    private route: Router,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {}\n\n  enviar(): void {\n    this.authService.login(this.data).subscribe(\n      (data) => {\n        this.authService.onSave(data);\n        this.route.navigate([`dashboard`]);\n      },\n      (error: Error) => {\n        //console.logerror);\n        // this.route.navigate([``]);\n        window.location.reload;\n      }\n    );\n  }\n  modal() {\n    const editModal = this.dialog.open(ModalForgetPasswordComponent, {\n      minWidth: '400px',\n      maxWidth: '800px',\n    });\n    editModal.afterClosed().subscribe((result) => {\n      result\n        ? location.reload()\n        : console.log('cancelaste el modal o hubo un error');\n    });\n  }\n}\n","<body>\n  <div class=\"first\">\n    <h1>Bienvenido de vuelta</h1>\n    <div class=\"flow\"></div>\n    <h3>\n      Somos el primer Laboratorio especializado en células madre, pioneros en\n      brindar servicios médicos especializados en la prevención, diagnóstico y\n      tratamiento de diversas patologías, destacando la medicina re-generativa y\n      terapia celular. <br />\n      Realizamos actividades de obtención, procesamiento, purificación,\n      caracterización celular, criopreservación en nuestro banco de células\n      madre y cultivo celular, procedentes de sangre periférica por aféresis,\n      médula ósea, sangre de cordón y/o tejido de cordón, lipoaspirado y pulpa\n      dental.\n    </h3>\n  </div>\n  <div class=\"second\">\n    <img src=\"assets/img/logo.png\" alt=\"logo\" />\n\n    <form>\n      <h1>Iniciar sesión</h1>\n\n      <mat-form-field class=\"example-full-width\">\n        <mat-label> Usuario </mat-label>\n        <input\n          type=\"text\"\n          [(ngModel)]=\"data.username\"\n          name=\"username\"\n          [ngModelOptions]=\"{ standalone: true }\"\n          matInput\n          placeholder=\"Usuario\"\n          value=\"admin001\"\n        />\n      </mat-form-field>\n\n      <mat-form-field class=\"example-full-width\">\n        <mat-label> Contraseña </mat-label>\n        <input\n          type=\"password\"\n          [(ngModel)]=\"data.password\"\n          name=\"password\"\n          [ngModelOptions]=\"{ standalone: true }\"\n          matInput\n          placeholder=\"Contraseña\"\n          value=\"Lima123$\"\n        />\n      </mat-form-field>\n\n      \n      <a mat-raised-button (click)=\"modal()\">¿Olvidaste tu contraseña?</a>\n\n      <!-- <button mat-flat-button color=\"primary\" (click)=\"enviar()\">¿Olvidaste tu contraseña? </button> -->\n      <button class=\"espace\" mat-flat-button color=\"primary\" (click)=\"enviar()\">\n        Iniciar sesión\n      </button>\n    </form>\n  </div>\n</body>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport * as Chart from 'chart.js';\nimport { ChartData } from 'src/app/src/shared/data/chart';\nimport { RandomColorPipe } from 'src/app/src/shared/pipes/randomColor/random-color.pipe';\nimport { ReportsService } from './../../../shared/services/reports/reports.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  public displayedColumns: string[] = [\n    'compras',\n    'dinero_ventas',\n    'mes',\n    'ventas',\n  ];\n  public datita: any;\n  public datos: any = [];\n  public dataSource = this.datos;\n  public labels: Array<string> = ChartData;\n  public canvas: any;\n  public ctx: any;\n  public compras: number = 0;\n  public ventas: number = 0;\n  public ganancia: string = '';\n\n  public paginator!: MatPaginator;\n  public sort!: MatSort;\n\n  constructor(private reportsService: ReportsService) {}\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.reportsService.listReport().subscribe((datos) => {\n      this.datita = JSON.parse(JSON.stringify(datos));\n      //console.logthis.datita);\n      this.dataSource = this.datita.mensual;\n      console.log('tmr', this.dataSource);\n      this.createLineChart();\n      this.createLineChart2();\n      // this.createLineChart3();\n    });\n  }\n\n  public createLineChart(): void {\n    this.canvas = document.getElementById('myChart');\n    this.ctx = this.canvas.getContext('2d');\n\n    let chart = new Chart(this.ctx, {\n      type: 'bar',\n      data: {\n        labels: this.labels,\n        datasets: [\n          {\n            label: ' ',\n            data: this.forData(),\n            backgroundColor: new RandomColorPipe().transform(),\n            fill: false,\n            borderWidth: 2,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        title: {\n          display: false,\n          text: 'First chart',\n        },\n        tooltips: {\n          mode: 'index',\n          intersect: true,\n        },\n        hover: {\n          mode: 'nearest',\n          intersect: true,\n        },\n      },\n    });\n  }\n\n  public createLineChart2(): void {\n    this.canvas = document.getElementById('myChart2');\n    this.ctx = this.canvas.getContext('2d');\n\n    let chart = new Chart(this.ctx, {\n      type: 'polarArea',\n      data: {\n        labels: this.labels,\n        datasets: [\n          {\n            label: 'Reporte Ventas',\n            data: this.forData2(),\n            backgroundColor: new RandomColorPipe().transform(),\n            fill: false,\n            borderWidth: 2,\n          },\n        ],\n      },\n      options: {\n        title: {\n          display: false,\n          text: 'First chart',\n        },\n        tooltips: {\n          mode: 'index',\n          intersect: true,\n        },\n        hover: {\n          mode: 'nearest',\n          intersect: true,\n        },\n      },\n    });\n  }\n\n  public createLineChart3(): void {\n    this.canvas = document.getElementById('myChart3');\n    this.ctx = this.canvas.getContext('2d');\n\n    let chart = new Chart(this.ctx, {\n      type: 'doughnut',\n      data: {\n        labels: this.labels,\n        datasets: [\n          {\n            label: 'Reporte Compras',\n            data: this.forData3(),\n            backgroundColor: new RandomColorPipe().transform(),\n            fill: false,\n            borderWidth: 2,\n          },\n        ],\n      },\n      options: {\n        title: {\n          display: false,\n          text: 'First chart',\n        },\n        tooltips: {\n          mode: 'index',\n          intersect: true,\n        },\n        hover: {\n          mode: 'nearest',\n          intersect: true,\n        },\n      },\n    });\n  }\n\n  public forData(): Array<number> {\n    var data: Array<number> = [];\n    for (let index = 0; index < this.dataSource.length; index++) {\n      data.push(this.dataSource[index].dinero_ventas);\n      this.ganancia = this.ventas + this.dataSource[index].dinero_ventas;\n    }\n    return data;\n  }\n\n  public forData2(): Array<number> {\n    var data: Array<number> = [];\n    for (let index = 0; index < this.dataSource.length; index++) {\n      data.push(this.dataSource[index].ventas);\n      this.ventas = this.ventas + this.dataSource[index].ventas;\n    }\n    return data;\n  }\n\n  public forData3(): Array<number> {\n    var data: Array<number> = [];\n    for (let index = 0; index < this.dataSource.length; index++) {\n      data.push(this.dataSource[index].compras);\n      this.compras = this.compras + this.dataSource[index].compras;\n    }\n    return data;\n  }\n}\n","<div class=\"container\">\n  <section>\n    <div class=\"fix color\">\n      <h1>{{ ventas }}</h1>\n      <h4>Ventas del mes</h4>\n    </div>\n    <div class=\"fix color2\">\n      <h1>{{ compras }}</h1>\n      <h4>Compras del mes</h4>\n    </div>\n    <div class=\"fix color3\">\n      <h1>S/ {{ ganancia }}</h1>\n      <h4>Ingreso del mes</h4>\n    </div>\n  </section>\n\n  <div class=\"section2\">\n    <h1>Reporte de ingresos</h1>\n    <canvas id=\"myChart\" class=\"canvas1\"></canvas>\n  </div>\n\n  <div class=\"section2\">\n    <h1>Reportes de ventas</h1>\n    <canvas id=\"myChart2\" class=\"canvas2\"></canvas>\n    <!-- <canvas id=\"myChart3\" class=\"canvas2\"></canvas> -->\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../../services/auth/login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginGuard implements CanActivate {\n  constructor(private authService: LoginService, private router: Router) {}\n\n  canActivate() {\n    if (this.authService.isLogged()) {\n      return true;\n    } else {\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { ModalForgetPasswordComponent } from './components/modal-forget-password/modal-forget-password.component';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [LoginComponent, ModalForgetPasswordComponent],\n  imports: [CommonModule, AuthRoutingModule, MaterialModule,FormsModule,ReactiveFormsModule ],\n})\nexport class AuthModule {}\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { ExportExcelPipe } from './../../../shared/pipes/exportExcel/export-excel.pipe';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ResponseClient } from './../../../shared/interfaces/clientes';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ClientesService } from 'src/app/src/shared/services/clientes/clientes.service';\nimport { ModalClientEditComponent } from '../modals/modal-client-edit/modal-client-edit.component';\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.scss'],\n})\nexport class ClientesComponent implements OnInit {\n  hide = true;\n  public nameFilter!: string;\n  userForm = new FormGroup({\n    nombre: new FormControl(''),\n    apellido: new FormControl(''),\n    tipoDocumento: new FormControl(''),\n    numDocumento: new FormControl(''),\n    sexo: new FormControl(''),\n    direcion: new FormControl(''),\n    telefono: new FormControl(''),\n    distrito: new FormControl(''),\n    edad: new FormControl(''),\n    email: new FormControl(''),\n  });\n  public displayedColumns: string[] = [\n    'NOMBRE',\n    'APELLIDO',\n    'TIPO_DOCUMENTO',\n    'NUM_DOCUMENTO',\n    'SEXO',\n    'DIRECCION',\n    'DISTRITO',\n    'TELEFONO',\n    'EDAD',\n    'EMAIL',\n    'ID_CLIENTE',\n    'OPCIONES',\n  ];\n  public datos: Array<ResponseClient> = [];\n  public dataSource = this.datos;\n\n  public paginator!: MatPaginator;\n  public sort!: MatSort;\n\n  constructor(\n    private clientesService: ClientesService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.getData();\n  }\n  getData(): void {\n    this.clientesService.listClients().subscribe((datos) => {\n      //console.logdatos);\n      this.datos = JSON.parse(JSON.stringify(datos))\n        .response as Array<ResponseClient>;\n      this.dataSource = this.datos;\n    });\n  }\n  saveUser(event: Event) {\n    event.preventDefault();\n    if (this.userForm.valid) {\n      const client = this.userForm.value;\n      //console.logclient);\n\n      this.clientesService.addClients(client).subscribe((response) => {\n        //console.logresponse);\n        // this.router.navigate(['./admin/products']);\n        this.userForm.reset();\n        this.getData();\n      });\n    }\n  }\n  applyFilter(): void {\n    // this.dataSource.includes(this.nameFilter.toLowerCase());\n    this.dataSource = this.datos.filter(\n      (i) =>\n        i.NOMBRE.toLowerCase().includes(this.nameFilter.toLocaleLowerCase()) ||\n        i.APELLIDO.toString().includes(this.nameFilter.toLocaleLowerCase()) ||\n        i.SEXO.toString().includes(this.nameFilter.toLocaleLowerCase()) ||\n        i.DIRECCION.toString().includes(this.nameFilter.toLocaleLowerCase()) ||\n        i.DISTRITO.toString().includes(this.nameFilter.toLocaleLowerCase()) ||\n        i.TELEFONO.toString().includes(this.nameFilter.toLocaleLowerCase()) ||\n        i.EMAIL.toString().includes(this.nameFilter.toLocaleLowerCase())\n    );\n  }\n  deleteUser(id: number): void {\n    let data = {\n      clientid: id,\n    };\n    //console.logdata);\n\n    this.clientesService.deleteClients(data).subscribe((rpta) => {\n      //console.logrpta);\n      this.getData();\n      // const index = this.dataSource.findIndex((user) => {\n      //   user.id_cliente == id;\n      // });\n      // this.dataSource.splice(index, 1);\n      // this.dataSource = [...this.dataSource];\n    });\n  }\n  openDialog(row: any): void {\n    //console.logrow);\n\n    const editModal = this.dialog.open(ModalClientEditComponent, {\n      data: row,\n      minWidth: '400px',\n      maxWidth: '800px',\n    });\n    editModal.afterClosed().subscribe((result) => {\n      result\n        ? this.getData()\n        : console.log('cancelaste el modal o hubo un error');\n    });\n  }\n  exportexcel(): void {\n    new ExportExcelPipe().transform('clientes.xlsx', 'excel-table');\n  }\n}\n","<div class=\"container\">\n  <div class=\"content\">\n    <div class=\"botones\">\n      <button (click)=\"exportexcel()\" class=\"btn-color\" mat-raised-button>\n        Exportar Datos\n      </button>\n    </div>\n    <div class=\"formulario\">\n      <form [formGroup]=\"userForm\" (ngSubmit)=\"saveUser($event)\">\n        <mat-card class=\"formu\">\n          <mat-card-header>\n            <mat-card-title>Agregar Cliente</mat-card-title>\n          </mat-card-header>\n          <mat-card-content class=\"Formcontent\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Nombre</mat-label>\n              <input\n                placeholder=\"Nombre\"\n                formControlName=\"nombre\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Apellido</mat-label>\n              <input\n                placeholder=\"Apellido\"\n                formControlName=\"apellido\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Tipo de Documento</mat-label>\n              <mat-select formControlName=\"tipoDocumento\">\n                <mat-option value=\"1\">DNI</mat-option>\n                <mat-option value=\"2\">Carne de Extranjeria</mat-option>\n                <mat-option value=\"3\">RUC</mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Numero de Documento</mat-label>\n              <input\n                placeholder=\"Numero de Documento\"\n                formControlName=\"numDocumento\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Sexo</mat-label>\n              <mat-select formControlName=\"sexo\">\n                <mat-option value=\"M\">Masculino</mat-option>\n                <mat-option value=\"F\">Femenino</mat-option>\n                <mat-option value=\"N\">No Especifica</mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Dirección</mat-label>\n              <input\n                placeholder=\"Dirección\"\n                formControlName=\"direcion\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Distrito</mat-label>\n              <input\n                placeholder=\"Distrito\"\n                formControlName=\"distrito\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Telefono</mat-label>\n              <input\n                placeholder=\"Telefono\"\n                formControlName=\"telefono\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Edad</mat-label>\n              <input\n                placeholder=\"Edad\"\n                formControlName=\"edad\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Email</mat-label>\n              <input\n                placeholder=\"Email\"\n                formControlName=\"email\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n          </mat-card-content>\n          <mat-card-actions>\n            <button\n              [disabled]=\"userForm.invalid\"\n              mat-raised-button\n              type=\"submit\"\n            >\n              Guardar\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </form>\n    </div>\n    <div class=\"lista\">\n      <h1>Lista de Clientes</h1>\n      <div class=\"filter\">\n        <mat-form-field>\n          <mat-label>Filtrar</mat-label>\n          <input\n            matInput\n            (keyup)=\"applyFilter()\"\n            [(ngModel)]=\"nameFilter\"\n            placeholder=\"Filtrar\"\n            #input\n          />\n        </mat-form-field>\n      </div>\n\n      <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"NOMBRE\">\n            <th mat-header-cell *matHeaderCellDef>NOMBRE</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.NOMBRE }}</td>\n          </ng-container>\n\n          <!-- Progress Column -->\n          <ng-container matColumnDef=\"APELLIDO\">\n            <th mat-header-cell *matHeaderCellDef>APELLIDO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.APELLIDO }}</td>\n          </ng-container>\n\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"DIRECCION\">\n            <th mat-header-cell *matHeaderCellDef>DIRECCION</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.DIRECCION }}</td>\n          </ng-container>\n\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"DISTRITO\">\n            <th mat-header-cell *matHeaderCellDef>DISTRITO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.DISTRITO }}</td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"EDAD\">\n            <th mat-header-cell *matHeaderCellDef>EDAD</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.EDAD }}</td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"EMAIL\">\n            <th mat-header-cell *matHeaderCellDef>EMAIL</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.EMAIL }}</td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"ID_CLIENTE\">\n            <th mat-header-cell *matHeaderCellDef>ID_CLIENTE</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.ID_CLIENTE }}</td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"NUM_DOCUMENTO\">\n            <th mat-header-cell *matHeaderCellDef>NUM_DOCUMENTO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.NUM_DOCUMENTO }}</td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"SEXO\">\n            <th mat-header-cell *matHeaderCellDef>SEXO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.SEXO }}</td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"TELEFONO\">\n            <th mat-header-cell *matHeaderCellDef>TELEFONO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.TELEFONO }}</td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"TIPO_DOCUMENTO\">\n            <th mat-header-cell *matHeaderCellDef>TIPO_DOCUMENTO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.TIPO_DOCUMENTO }}</td>\n          </ng-container>\n          <ng-container matColumnDef=\"OPCIONES\">\n            <th mat-header-cell *matHeaderCellDef>OPCIONES</th>\n            <td mat-cell *matCellDef=\"let row\">\n              <button mat-raised-button class=\"mr-1\" (click)=\"openDialog(row)\">\n                Editar\n              </button>\n              <button\n                mat-raised-button\n                color=\"warn\"\n                (click)=\"deleteUser(row.ID_CLIENTE)\"\n              >\n                Eliminar\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n\n        <mat-paginator\n          [pageSizeOptions]=\"[5, 10, 25, 100]\"\n          showFirstLastButtons\n        ></mat-paginator>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"no-visible\">\n    <table mat-table id=\"excel-table\" [dataSource]=\"dataSource\">\n      <!-- ID Column -->\n      <ng-container matColumnDef=\"NOMBRE\">\n        <th mat-header-cell *matHeaderCellDef>NOMBRE</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.NOMBRE }}</td>\n      </ng-container>\n\n      <!-- Progress Column -->\n      <ng-container matColumnDef=\"APELLIDO\">\n        <th mat-header-cell *matHeaderCellDef>APELLIDO</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.APELLIDO }}</td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"DIRECCION\">\n        <th mat-header-cell *matHeaderCellDef>DIRECCION</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.DIRECCION }}</td>\n      </ng-container>\n\n      <!-- Fruit Column -->\n      <ng-container matColumnDef=\"DISTRITO\">\n        <th mat-header-cell *matHeaderCellDef>DISTRITO</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.DISTRITO }}</td>\n      </ng-container>\n      <!-- Fruit Column -->\n      <ng-container matColumnDef=\"EDAD\">\n        <th mat-header-cell *matHeaderCellDef>EDAD</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.EDAD }}</td>\n      </ng-container>\n      <!-- Fruit Column -->\n      <ng-container matColumnDef=\"EMAIL\">\n        <th mat-header-cell *matHeaderCellDef>EMAIL</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.EMAIL }}</td>\n      </ng-container>\n      <!-- Fruit Column -->\n      <ng-container matColumnDef=\"ID_CLIENTE\">\n        <th mat-header-cell *matHeaderCellDef>ID_CLIENTE</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.ID_CLIENTE }}</td>\n      </ng-container>\n      <!-- Fruit Column -->\n      <ng-container matColumnDef=\"NUM_DOCUMENTO\">\n        <th mat-header-cell *matHeaderCellDef>NUM_DOCUMENTO</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.NUM_DOCUMENTO }}</td>\n      </ng-container>\n      <!-- Fruit Column -->\n      <ng-container matColumnDef=\"SEXO\">\n        <th mat-header-cell *matHeaderCellDef>SEXO</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.SEXO }}</td>\n      </ng-container>\n      <!-- Fruit Column -->\n      <ng-container matColumnDef=\"TELEFONO\">\n        <th mat-header-cell *matHeaderCellDef>TELEFONO</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.TELEFONO }}</td>\n      </ng-container>\n      <!-- Fruit Column -->\n      <ng-container matColumnDef=\"TIPO_DOCUMENTO\">\n        <th mat-header-cell *matHeaderCellDef>TIPO_DOCUMENTO</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.TIPO_DOCUMENTO }}</td>\n      </ng-container>\n      <ng-container class=\"no-visible\" matColumnDef=\"OPCIONES\">\n        <th mat-header-cell *matHeaderCellDef>OPCIONES</th>\n        <td mat-cell *matCellDef=\"let row\">\n          <button mat-raised-button class=\"mr-1\" (click)=\"openDialog(row)\">\n            Editar\n          </button>\n          <button\n            mat-raised-button\n            color=\"warn\"\n            (click)=\"deleteUser(row.ID_CLIENTE)\"\n          >\n            Eliminar\n          </button>\n        </td>\n      </ng-container>\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tesis';\n}\n","<router-outlet></router-outlet>\n","import { permission } from '../interfaces/authLogin';\n\nexport const superadmin: Array<permission> = [\n  { id: 0, name: 'Inicio' },\n  { id: 1, name: 'Usuario' },\n  { id: 2, name: 'Clientes' },\n  { id: 3, name: 'Ventas' },\n  { id: 4, name: 'Predicción' },\n  { id: 5, name: 'Reportes' },\n  { id: 6, name: 'Orden de compra' },\n  { id: 7, name: 'Producto' },\n  { id: 8, name: 'Cerrar Sesión' },\n];\n\nexport const admin: Array<permission> = [\n  // { id: 0, name: 'Inicio' },\n  // { id: 1, name: 'Usuario' },\n  { id: 2, name: 'Clientes' },\n  { id: 4, name: 'Predicción' },\n  { id: 7, name: 'Producto' },\n  { id: 8, name: 'Cerrar Sesión' },\n];\n\nexport const client: Array<permission> = [\n  { id: 0, name: 'Inicio' },\n  { id: 3, name: 'Ventas' },\n  { id: 6, name: 'Orden de compra' },\n  { id: 8, name: 'Cerrar Sesión' },\n];\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\n\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ClientesService } from 'src/app/src/shared/services/clientes/clientes.service';\n\n@Component({\n  selector: 'app-modal-client-edit',\n  templateUrl: './modal-client-edit.component.html',\n  styleUrls: ['./modal-client-edit.component.scss'],\n})\nexport class ModalClientEditComponent implements OnInit {\n  hide = true;\n  public nameFilter!: string;\n  userForm = new FormGroup({\n    nombre: new FormControl(''),\n    apellido: new FormControl(''),\n    tipoDocumento: new FormControl(''),\n    numDocumento: new FormControl(''),\n    sexo: new FormControl(''),\n    direcion: new FormControl(''),\n    telefono: new FormControl(''),\n    distrito: new FormControl(''),\n    edad: new FormControl(''),\n    email: new FormControl(''),\n  });\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<ModalClientEditComponent>,\n    private http: HttpClient,\n    private clientesService: ClientesService\n  ) {}\n\n  ngOnInit(): void {\n    //console.logthis.data);\n    this.userForm.patchValue({\n      nombre: this.data.NOMBRE,\n      apellido: this.data.APELLIDO,\n      tipoDocumento: this.data.TIPO_DOCUMENTO,\n      numDocumento: this.data.NUM_DOCUMENTO,\n      sexo: this.data.SEXO,\n      direcion: this.data.DIRECCION,\n      telefono: this.data.TELEFONO,\n      distrito: this.data.DISTRITO,\n      edad: this.data.EDAD,\n      email: this.data.EMAIL,\n    });\n  }\n  editClient(event: Event) {\n    event.preventDefault();\n    if (this.userForm.valid) {\n      const user = this.userForm.value;\n\n      user['clientid'] = this.data.ID_CLIENTE;\n      //console.logthis.data.ID_CLIENTE);\n\n      //console.loguser);\n\n      this.clientesService.editClients(user).subscribe((response) => {\n        if (response) {\n          this.dialogRef.close(true);\n        } else {\n          this.dialogRef.close(false);\n        }\n      });\n    }\n  }\n}\n","<div class=\"formulario\">\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"editClient($event)\">\n      <mat-card class=\"formu\">\n        <mat-card-header>\n          <mat-card-title>Agregar Cliente</mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"Formcontent\">\n         \n              <mat-form-field appearance=\"fill\">\n                <mat-label>Nombre</mat-label>\n                <input placeholder=\"Nombre\" formControlName=\"nombre\" matInput type=\"text\">\n              </mat-form-field>\n          \n          \n              <mat-form-field  appearance=\"fill\">\n                <mat-label>Apellido</mat-label>\n                <input placeholder=\"Apellido\" formControlName=\"apellido\" matInput type=\"text\">\n              </mat-form-field>\n          \n        \n              <mat-form-field appearance=\"fill\">\n                <mat-label  >Tipo de Documento</mat-label>\n                <mat-select formControlName=\"tipoDocumento\">\n                  <mat-option value=\"1\">DNI</mat-option>\n                  <mat-option value=\"2\">Carne de Extranjeria</mat-option>\n                  <mat-option value=\"3\">RUC</mat-option>\n                </mat-select>\n              </mat-form-field>\n  \n          \n        \n              <mat-form-field appearance=\"fill\">\n                <mat-label>Numero de Documento</mat-label>\n                <input placeholder=\"Numero de Documento\" formControlName=\"numDocumento\" matInput type=\"text\">\n              </mat-form-field>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Sexo</mat-label>\n                <mat-select  formControlName=\"sexo\">\n                  <mat-option value=\"M\">Masculino</mat-option>\n                  <mat-option value=\"F\">Femenino</mat-option>\n                  <mat-option value=\"N\">No Especifica</mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Dirección</mat-label>\n                <input placeholder=\"Dirección\" formControlName=\"direcion\" matInput type=\"text\">\n              </mat-form-field>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Distrito</mat-label>\n                <input placeholder=\"Distrito\" formControlName=\"distrito\" matInput type=\"text\">\n              </mat-form-field>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Telefono</mat-label>\n                <input placeholder=\"Telefono\" formControlName=\"telefono\" matInput type=\"text\">\n              </mat-form-field>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Edad</mat-label>\n                <input placeholder=\"Edad\" formControlName=\"edad\" matInput type=\"text\">\n              </mat-form-field>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Email</mat-label>\n                <input placeholder=\"Email\" formControlName=\"email\" matInput type=\"text\">\n              </mat-form-field>\n         \n         \n        </mat-card-content>\n        <mat-card-actions>\n          <button [disabled]=\"userForm.invalid\" mat-raised-button type=\"submit\">Guardar</button>\n        </mat-card-actions>\n      </mat-card>\n      \n    </form>\n  </div>","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'randomColor',\n})\nexport class RandomColorPipe implements PipeTransform {\n  transform(): string {\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += '0123456789ABCDEF'[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthModule } from './src/auth/auth.module';\nimport { FeaturedModulesModule } from './src/featured-modules/featured-modules.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChartsModule } from 'ng2-charts';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { ExportExcelPipe } from './src/shared/pipes/exportExcel/export-excel.pipe';\n\n\n\n@NgModule({\n  declarations: [AppComponent, ExportExcelPipe],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AuthModule,\n    FeaturedModulesModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ChartsModule,\n    MatDialogModule,\n    FormsModule, ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { responseLogin } from './../../interfaces/authLogin';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { authLogin } from '../../interfaces/authLogin';\n\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  headers: HttpHeaders = new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Methods': 'POST, OPTIONS',\n    'Access-Control-Allow-Credentials': 'true',\n    'Access-Control-Allow-Origin': '*',\n  });\n\n  constructor(private http: HttpClient) {}\n\n  login(datos: authLogin) {\n    let url_api = `${environment.url}/api/v1/users/login`;\n\n    return this.http\n      .post(url_api, datos, {\n        headers: this.headers,\n      })\n      .pipe(map((data) => data));\n  }\n\n  listUser() {\n    let url_api = `${environment.url}/api/v1/users/list`;\n\n    return this.http\n      .post(url_api, {}, { headers: this.headerSession() })\n      .pipe(map((data) => data));\n  }\n\n  onSave(data: any) {\n    sessionStorage.setItem('token', data.token);\n    sessionStorage.setItem('view', data.userType);\n  }\n\n  headerSession(): HttpHeaders {\n    return new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Credentials': 'true',\n      'Access-Control-Allow-Origin': '*',\n      token: `${sessionStorage.getItem('token')}`,\n    });\n  }\n\n  isLogged(): boolean {\n    let token = `${sessionStorage.getItem('token')}`.toString();\n    if (token == '' || token == 'null') {\n      return false;\n    }\n    return true;\n  }\n\n  logout(): void {\n    sessionStorage.removeItem('token');\n  }\n  resetPassword(data:any){\n    return this.http.post(`${environment.url}/api/v1/users/password`,data,{\n      headers: this.headerSession(),\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { VentasService } from 'src/app/src/shared/services/ventas/ventas.service';\nimport { ProductsService } from 'src/app/src/shared/services/products/products.service';\nimport { ClientesService } from 'src/app/src/shared/services/clientes/clientes.service';\nimport { SalesList } from './../../../shared/interfaces/ventas';\nimport { ListProduct } from './../../../shared/interfaces/products';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ExportExcelPipe } from 'src/app/src/shared/pipes/exportExcel/export-excel.pipe';\n\n@Component({\n  selector: 'app-ventas',\n  templateUrl: './ventas.component.html',\n  styleUrls: ['./ventas.component.scss'],\n})\nexport class VentasComponent implements OnInit {\n  hide = true;\n\n  public nameFilter!: string;\n  public displayedColumns: string[] = [\n    'ID_CLIENTE',\n    'ID_PRODUCTO',\n    'ID_VENTA',\n    'CANTIDAD',\n    'FECHA',\n    'MONTO',\n    'OPCIONES',\n  ];\n  userForm = new FormGroup({\n    clientid: new FormControl(''),\n    productid: new FormControl(''),\n    cantidad: new FormControl(''),\n  });\n  public datos: Array<SalesList> = [];\n  public dataSource = this.datos;\n  productos: any = [];\n  clientes: any = [];\n  public paginator!: MatPaginator;\n  public sort!: MatSort;\n  constructor(\n    private ventasService: VentasService,\n    private productsService: ProductsService,\n    private clientesService: ClientesService\n  ) {}\n\n  ngOnInit(): void {\n    this.getData();\n    this.getProducts();\n    this.getClientes();\n  }\n  getData() {\n    this.ventasService.list().subscribe((datos) => {\n      console.log(datos);\n      \n      this.datos = JSON.parse(JSON.stringify(datos))\n        .response as Array<SalesList>;\n      this.dataSource = this.datos;\n    });\n  }\n  getProducts() {\n    this.productsService.listProducts().subscribe((datos) => {\n      this.productos = JSON.parse(JSON.stringify(datos)).response;\n      //console.logthis.productos);\n    });\n  }\n  getClientes() {\n    this.clientesService.listClients().subscribe((datos) => {\n      this.clientes = JSON.parse(JSON.stringify(datos)).response;\n    });\n  }\n  public applyFilter(): void {\n    // this.dataSource.includes(this.nameFilter.toLowerCase());\n    this.dataSource = this.datos.filter(\n      (i) =>\n        i.CANTIDAD.toString().includes(this.nameFilter) ||\n        i.FECHA.toLowerCase().includes(this.nameFilter) ||\n        i.ID_CLIENTE.toString().includes(this.nameFilter) ||\n        i.ID_PRODUCTO.toString().includes(this.nameFilter) ||\n        i.ID_VENTA.toString().includes(this.nameFilter)\n    );\n  }\n  saveSale() {\n    if (this.userForm.valid) {\n      const sale = this.userForm.value;\n      //console.logsale);\n\n      this.ventasService.add(sale).subscribe((response) => {\n        //console.logresponse);\n        // this.router.navigate(['./admin/products']);\n        this.userForm.reset();\n        this.getData();\n      });\n    }\n  }\n  deleteSale(id: number) {\n    let data = {\n      salesid: id,\n    };\n    this.ventasService.delete(data).subscribe((rpta) => {\n      this.getData();\n      // //console.logrpta);\n      // const index = this.dataSource.findIndex((venta) => {\n      //   venta.ID_CLIENTE == id;\n      // });\n      // this.dataSource.splice(index, 1);\n      // this.dataSource = [...this.dataSource];\n    });\n  }\n\n  exportexcel() {\n    new ExportExcelPipe().transform('ventas.xlsx', 'excel-ventas');\n  }\n}\n","<div class=\"container\">\n  <div class=\"content\">\n    <div class=\"botones\">\n      <button (click)=\"exportexcel()\" class=\"btn-color\" mat-raised-button>Exportar Datos</button>\n    </div>\n    <div class=\"formulario\">\n      <form [formGroup]=\"userForm\" (ngSubmit)=\"saveSale()\">\n        <mat-card class=\"formu\">\n          <mat-card-header>\n            <mat-card-title>Agregar Venta</mat-card-title>\n          </mat-card-header>\n          <mat-card-content class=\"Formcontent\">\n            \n            <mat-form-field appearance=\"fill\">\n              <mat-label >Cliente</mat-label>\n              <mat-select formControlName=\"clientid\">\n                <mat-option *ngFor=\"let item of clientes\" [value]=\"item.ID_CLIENTE\">\n                    {{item.NUM_DOCUMENTO}}  \n                </mat-option>\n              \n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label >Producto</mat-label>\n              <mat-select formControlName=\"productid\">\n                <mat-option *ngFor=\"let item of productos\" [value]=\"item.ID_PRODUCTO\">\n                    {{item.NOMBRE_PRODUCTO}}  \n                </mat-option>\n              \n              </mat-select>\n            </mat-form-field>\n\n            <!-- <mat-form-field appearance=\"fill\">\n              <mat-label>Product ID</mat-label>\n              <input\n                placeholder=\"Product ID\"\n                formControlName=\"productid\"\n                matInput\n                type=\"number\"\n              />\n            </mat-form-field> -->\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Cantidad</mat-label>\n              <input\n                placeholder=\"Cantidad\"\n                formControlName=\"cantidad\"\n                matInput\n                type=\"number\"\n              />\n            </mat-form-field>\n          </mat-card-content>\n          <mat-card-actions>\n            <button\n              [disabled]=\"userForm.invalid\"\n              mat-raised-button\n              type=\"submit\"\n            >\n              Guardar\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </form>\n    </div>\n    <div class=\"lista\">\n      <h1>Lista de Ventas</h1>\n      <div class=\"filter\">\n        <mat-form-field>\n          <mat-label>Filtrar</mat-label>\n          <input\n            matInput\n            (keyup)=\"applyFilter()\"\n            [(ngModel)]=\"nameFilter\"\n            placeholder=\"Filtrar\"\n            #input\n          />\n        </mat-form-field>\n      </div>\n\n      <div class=\"mat-elevation-z8\">\n        <table id=\"excel-ventas\" mat-table [dataSource]=\"dataSource\">\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"ID_CLIENTE\">\n            <th mat-header-cell *matHeaderCellDef>ID_CLIENTE</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.ID_CLIENTE }}</td>\n          </ng-container>\n\n          <!-- Progress Column -->\n          <ng-container matColumnDef=\"ID_PRODUCTO\">\n            <th mat-header-cell *matHeaderCellDef>ID_PRODUCTO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.ID_PRODUCTO }}</td>\n          </ng-container>\n\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"ID_VENTA\">\n            <th mat-header-cell *matHeaderCellDef>ID_VENTA</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.ID_VENTA }}</td>\n          </ng-container>\n\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"MONTO\">\n            <th mat-header-cell *matHeaderCellDef>MONTO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.MONTO }}</td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"CANTIDAD\">\n            <th mat-header-cell *matHeaderCellDef>CANTIDAD</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.CANTIDAD }}</td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"FECHA\">\n            <th mat-header-cell *matHeaderCellDef>FECHA</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.FECHA }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"OPCIONES\">\n            <th mat-header-cell *matHeaderCellDef>OPCIONES</th>\n            <td mat-cell *matCellDef=\"let row\">\n             \n              <button\n                mat-raised-button\n                color=\"warn\"\n                (click)=\"deleteSale(row.ID_VENTA)\"\n              >\n                Eliminar\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n\n        <mat-paginator\n          [pageSizeOptions]=\"[5, 10, 25, 100]\"\n          showFirstLastButtons\n        ></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from '../auth/login.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosService {\n  \n\n  constructor(\n    private http:HttpClient,\n    private authSession: LoginService\n  ) { }\n\n  ListarUsuarios(token:string){\n    return this.http.post(`${environment.url}/api/v1/users/list`,{},{\n      headers: this.authSession.headerSession(),\n    });\n  }\n  createUser(data:any){\n    return this.http.post(`${environment.url}/api/v1/users/add`,data,{\n      headers: this.authSession.headerSession(),\n    });\n  }\n  deleteUser(data:any){\n    return this.http.post(`${environment.url}/api/v1/users/delete`,data,{\n      headers: this.authSession.headerSession(),\n    });\n  }\n  editUser(data:any){\n    return this.http.post(`${environment.url}/api/v1/users/update`,data,{\n      headers: this.authSession.headerSession(),\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { ResponseProduct } from './../../../shared/interfaces/products';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ProductsService } from 'src/app/src/shared/services/products/products.service';\nimport { ExportExcelPipe } from 'src/app/src/shared/pipes/exportExcel/export-excel.pipe';\n\n@Component({\n  selector: 'app-inventario',\n  templateUrl: './inventario.component.html',\n  styleUrls: ['./inventario.component.scss'],\n})\nexport class InventarioComponent implements OnInit {\n  hide = true;\n  public nameFilter!: string;\n  userForm = new FormGroup({\n    nombre: new FormControl(''),\n    precio: new FormControl(''),\n    stock: new FormControl(''),\n  });\n  public displayedColumns: string[] = [\n    'ID_PRODUCTO',\n    'NOMBRE_PRODUCTO',\n    'PRECIO',\n    'STOCK',\n    'OPCIONES',\n  ];\n  public datos: Array<ResponseProduct> = [];\n  public dataSource = this.datos;\n\n  public paginator!: MatPaginator;\n  public sort!: MatSort;\n\n  constructor(private productsService: ProductsService) {}\n\n  ngOnInit(): void {\n    this.getData();\n  }\n  getData() {\n    this.productsService.listProducts().subscribe((datos) => {\n      this.datos = JSON.parse(JSON.stringify(datos))\n        .response as Array<ResponseProduct>;\n      this.dataSource = this.datos;\n    });\n  }\n  saveProduct(event: Event) {\n    event.preventDefault();\n    if (this.userForm.valid) {\n      const product = this.userForm.value;\n      //console.logproduct);\n\n      this.productsService.addProduct(product).subscribe((response) => {\n        //console.logresponse);\n        // this.router.navigate(['./admin/products']);\n        this.userForm.reset();\n        this.getData();\n      });\n    }\n  }\n  public applyFilter(): void {\n    // this.dataSource.includes(this.nameFilter.toLowerCase());\n    this.dataSource = this.datos.filter((i) =>\n      i.NOMBRE_PRODUCTO.toString().includes(this.nameFilter)\n    );\n  }\n  deleteProduct(id: number) {\n    let data = {\n      productid: id,\n    };\n    this.productsService.deleteProduct(data).subscribe((rpta) => {\n      this.getData();\n      // //console.logrpta);\n      // const index = this.dataSource.findIndex((product) => {\n      //   product.ID_PRODUCTO == id;\n      // });\n      // this.dataSource.splice(index, 1);\n      // this.dataSource = [...this.dataSource];\n    });\n  }\n  exportexcel() {\n    new ExportExcelPipe().transform('producto.xlsx', 'excel-inventario');\n  }\n}\n","<div class=\"container\">\n  <div class=\"content\">\n    <div class=\"botones\">\n      <button (click)=\"exportexcel()\" class=\"btn-color\" mat-raised-button>Exportar Datos</button>\n    </div>\n    <div class=\"formulario\">\n      <form [formGroup]=\"userForm\" (ngSubmit)=\"saveProduct($event)\">\n        <mat-card class=\"formu\">\n          <mat-card-header>\n            <mat-card-title>Agregar Producto</mat-card-title>\n          </mat-card-header>\n          <mat-card-content class=\"Formcontent\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Nombre</mat-label>\n              <input\n                placeholder=\"Nombre\"\n                formControlName=\"nombre\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Precio</mat-label>\n              <input\n                placeholder=\"Precio\"\n                formControlName=\"precio\"\n                matInput\n                type=\"number\"\n              />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Stock</mat-label>\n              <input\n                placeholder=\"Stock\"\n                formControlName=\"stock\"\n                matInput\n                type=\"number\"\n              />\n            </mat-form-field>\n          </mat-card-content>\n          <mat-card-actions>\n            <button\n              [disabled]=\"userForm.invalid\"\n              mat-raised-button\n              type=\"submit\"\n            >\n              Guardar\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </form>\n    </div>\n    <div class=\"lista\">\n      <h1>Lista de Productos</h1>\n      <div class=\"filter\">\n        <mat-form-field>\n          <mat-label>Filtrar</mat-label>\n          <input\n            matInput\n            (keyup)=\"applyFilter()\"\n            [(ngModel)]=\"nameFilter\"\n            placeholder=\"Filtrar\"\n            #input\n          />\n        </mat-form-field>\n      </div>\n\n      <div class=\"mat-elevation-z8\">\n        <table id=\"excel-inventario\" mat-table [dataSource]=\"dataSource\">\n          <ng-container matColumnDef=\"ID_PRODUCTO\">\n            <th mat-header-cell *matHeaderCellDef>ID_PRODUCTO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.ID_PRODUCTO }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"NOMBRE_PRODUCTO\">\n            <th mat-header-cell *matHeaderCellDef>NOMBRE_PRODUCTO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.NOMBRE_PRODUCTO }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"PRECIO\">\n            <th mat-header-cell *matHeaderCellDef>PRECIO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.PRECIO }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"STOCK\">\n            <th mat-header-cell *matHeaderCellDef>STOCK</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.STOCK }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"OPCIONES\">\n            <th mat-header-cell *matHeaderCellDef>OPCIONES</th>\n            <td mat-cell *matCellDef=\"let row\">\n             \n              <button\n                mat-raised-button\n                color=\"warn\"\n                (click)=\"deleteProduct(row.ID_PRODUCTO)\"\n              >\n                Eliminar\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n\n        <mat-paginator\n          [pageSizeOptions]=\"[5, 10, 25, 100]\"\n          showFirstLastButtons\n        ></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport * as Chart from 'chart.js';\nimport { ChartData } from 'src/app/src/shared/data/chart';\nimport { RandomColorPipe } from 'src/app/src/shared/pipes/randomColor/random-color.pipe';\nimport { ReportsService } from './../../../shared/services/reports/reports.service';\n@Component({\n  selector: 'app-reportes',\n  templateUrl: './reportes.component.html',\n  styleUrls: ['./reportes.component.scss'],\n})\nexport class ReportesComponent implements OnInit {\n  public displayedColumns: string[] = [\n    'compras',\n    'dinero_ventas',\n    'mes',\n    'ventas',\n  ];\n  datita: any;\n  public datos: any = [];\n  public dataSource = this.datos;\n  public labels: Array<string> = ChartData;\n  public canvas: any;\n  public ctx: any;\n  compras: number = 0;\n  ventas: number = 0;\n\n  public paginator!: MatPaginator;\n  public sort!: MatSort;\n\n  constructor(private reportsService: ReportsService) {}\n\n  ngOnInit(): void {\n    this.getData();\n  }\n\n  getData() {\n    this.reportsService.listReport().subscribe((datos) => {\n      this.datita = JSON.parse(JSON.stringify(datos));\n      //console.logthis.datita);\n      this.compras = this.datita.compras_anual;\n      this.ventas = this.datita.ventas_anual;\n      this.dataSource = this.datita.mensual;\n      console.log('tmr', this.dataSource);\n      this.createLineChart();\n      this.createLineChart2();\n    });\n  }\n\n  public createLineChart(): void {\n    this.canvas = document.getElementById('myChart');\n    this.ctx = this.canvas.getContext('2d');\n\n    let chart = new Chart(this.ctx, {\n      type: 'horizontalBar',\n\n      data: {\n        labels: this.labels,\n        datasets: [\n          {\n            label: 'Ingreso anual',\n            data: this.forData(),\n            backgroundColor: new RandomColorPipe().transform(),\n            fill: false,\n            borderWidth: 2,\n          },\n        ],\n      },\n      options: {\n        title: {\n          display: false,\n          text: 'First chart',\n        },\n\n        tooltips: {\n          mode: 'index',\n          intersect: true,\n        },\n        hover: {\n          mode: 'nearest',\n          intersect: true,\n        },\n      },\n    });\n  }\n\n  public createLineChart2(): void {\n    this.canvas = document.getElementById('myChart2');\n    this.ctx = this.canvas.getContext('2d');\n\n    let chart = new Chart(this.ctx, {\n      type: 'bar',\n      data: {\n        labels: this.labels,\n        datasets: [\n          {\n            label: 'Ventas mensual',\n            data: this.forData2(),\n            backgroundColor: new RandomColorPipe().transform(),\n            fill: false,\n            borderWidth: 2,\n          },\n        ],\n      },\n      options: {\n        title: {\n          display: false,\n          text: 'First chart',\n        },\n        tooltips: {\n          mode: 'index',\n          intersect: true,\n        },\n        hover: {\n          mode: 'nearest',\n          intersect: true,\n        },\n      },\n    });\n  }\n\n  public forData(): Array<number> {\n    var data: Array<number> = [];\n    for (let index = 0; index < this.dataSource.length; index++) {\n      data.push(this.dataSource[index].dinero_ventas);\n    }\n    return data;\n  }\n\n  public forData2(): Array<number> {\n    var data: Array<number> = [];\n    for (let index = 0; index < this.dataSource.length; index++) {\n      data.push(this.dataSource[index].ventas);\n    }\n    return data;\n  }\n}\n","<div class=\"container\">\n  <section>\n    <div class=\"fix color1\">\n      <h1>{{ ventas }}</h1>\n      <h4>Ventas anual</h4>\n    </div>\n    <div class=\"fix color2\">\n      <h1>{{ compras }}</h1>\n      <h4>Compras anual</h4>\n    </div>\n  </section>\n\n  <canvas id=\"myChart\" class=\"canvas1\"></canvas>\n  <canvas id=\"myChart2\" class=\"canvas1\"></canvas>\n</div>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport { PredictionList, PredictionDelete } from '../../interfaces/predictions';\nimport { LoginService } from '../auth/login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PredictionsService {\n  constructor(private http: HttpClient, private authSession: LoginService) {}\n\n  list() {\n    let url_api = `${environment.url}/api/v1/predictions/list`;\n\n    return this.http\n      .post(\n        url_api,\n        {},\n        {\n          headers: this.authSession.headerSession(),\n        }\n      )\n      .pipe(map((data) => data));\n  }\n\n  add(data: PredictionList) {\n    let url_api = `${environment.url}/api/v1/predictions/add`;\n\n    return this.http\n      .post(url_api, data, {\n        headers: this.authSession.headerSession(),\n      })\n      .pipe(map((data) => data));\n  }\n\n  delete(data: PredictionDelete) {\n    let url_api = `${environment.url}/api/v1/predictions/delete`;\n\n    return this.http\n      .post(url_api, data, {\n        headers: this.authSession.headerSession(),\n      })\n      .pipe(map((data) => data));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { LoginService } from '../auth/login.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class PurchasesService {\n\n  constructor(private authSession:LoginService,private http:HttpClient) { }\n  listPurchases(){\n    return this.http.post(`${environment.url}/api/v1/purchases/list`,{},{\n      headers: this.authSession.headerSession(),\n    });\n  }\n  addPurchases(data:any){\n    return this.http.post(`${environment.url}/api/v1/purchases/add`,data,{\n      headers: this.authSession.headerSession(),\n    });\n  }\n  deletePurchases(data:any){\n    return this.http.post(`${environment.url}/api/v1/purchases/delete`,data,{\n      headers: this.authSession.headerSession(),\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FeaturedModulesRoutingModule } from './featured-modules-routing.module';\nimport { LayoutComponent } from './components/layout/layout.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { MaterialModule } from '../shared/material/material.module';\nimport { ClientesComponent } from './components/clientes/clientes.component';\nimport { VentasComponent } from './components/ventas/ventas.component';\nimport { PrediccionComponent } from './components/prediccion/prediccion.component';\nimport { ReportesComponent } from './components/reportes/reportes.component';\nimport { InventarioComponent } from './components/inventario/inventario.component';\nimport { OrdencompraComponent } from './components/ordencompra/ordencompra.component';\nimport { UsuariosComponent } from './components/usuarios/usuarios.component';\nimport { ModalUsuarioEditComponent } from './components/modals/modal-usuario-edit/modal-usuario-edit.component';\nimport { RandomColorPipe } from '../shared/pipes/randomColor/random-color.pipe';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { ModalClientEditComponent } from './components/modals/modal-client-edit/modal-client-edit.component';\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    HomeComponent,\n    ClientesComponent,\n    VentasComponent,\n    PrediccionComponent,\n    ReportesComponent,\n    InventarioComponent,\n    OrdencompraComponent,\n    UsuariosComponent,\n    RandomColorPipe,\n    ModalUsuarioEditComponent,\n    ModalClientEditComponent\n    \n  ],\n  imports: [CommonModule, FeaturedModulesRoutingModule, MaterialModule,FormsModule, ReactiveFormsModule],\n})\nexport class FeaturedModulesModule {}\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { LoginGuard } from './src/shared/guards/login/login.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: './src/auth/auth.module#AuthModule',\n  },\n  {\n    path: 'dashboard',\n    loadChildren:\n      './src/featured-modules/featured-modules.module#FeaturedModulesModule',\n    canActivate: [LoginGuard],\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      preloadingStrategy: PreloadAllModules,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\nimport { LoginService } from '../auth/login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class VentasService {\n  constructor(private http: HttpClient, private authSession: LoginService) {}\n\n  list() {\n    let url_api = `${environment.url}/api/v1/sales/list`;\n\n    return this.http\n      .post(\n        url_api,\n        {},\n        {\n          headers: this.authSession.headerSession(),\n        }\n      )\n      .pipe(map((data) => data));\n  }\n\n  add(data: any) {\n    // let url_api = `${environment.url}/api/v1/sales/add`;\n\n    // return this.http\n    //   .post(url_api, data, {\n    //     headers: this.authSession.headerSession(),\n    //   })\n    //   .pipe(map((data) => data));\n    return this.http.post(`${environment.url}/api/v1/sales/add`,data,{\n      headers: this.authSession.headerSession(),\n    });\n  }\n\n  delete(data: any) {\n    let url_api = `${environment.url}/api/v1/sales/delete`;\n\n    return this.http\n      .post(url_api, data, {\n        headers: this.authSession.headerSession(),\n      })\n      .pipe(map((data) => data));\n  }\n}\n","export const ChartData: Array<string> = [\n  'ENE',\n  'FEB',\n  'MAR',\n  'ABR',\n  'MAY',\n  'JUN',\n  'JUL',\n  'AGO',\n  'SEP',\n  'OCT',\n  'NOV',\n  'DIC',\n];\n\nexport const TablePrediction: Array<string> = [\n  'ID_RESULTADO_MODELO',\n  'NOMBRE',\n  'PRECISION_MODELO',\n  'PREDICCION',\n];\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\n\nimport { PurchasesService } from 'src/app/src/shared/services/purchases/purchases.service';\nimport { ProductsService } from 'src/app/src/shared/services/products/products.service';\nimport { ResponsePurchase } from './../../../shared/interfaces/purchases';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { ExportExcelPipe } from 'src/app/src/shared/pipes/exportExcel/export-excel.pipe';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\n@Component({\n  selector: 'app-ordencompra',\n  templateUrl: './ordencompra.component.html',\n  styleUrls: ['./ordencompra.component.scss'],\n})\nexport class OrdencompraComponent implements OnInit {\n  hide = true;\n  public nameFilter!: string;\n  userForm = new FormGroup({\n    modeloid: new FormControl(''),\n    productid: new FormControl(''),\n    proovedor: new FormControl(''),\n    mensaje: new FormControl(''),\n  });\n  public displayedColumns: string[] = [\n    'PROVEEDOR',\n    'MENSAJE',\n    'ID_ORDEN_COMPRA',\n    'ID_PRODUCTO',\n    'ID_RESULTADO_MODELO',\n    'FECHA',\n    'OPCIONES',\n  ];\n  public datos: Array<ResponsePurchase> = [];\n  ordenes: any = [];\n  public dataSource = this.datos;\n\n  public paginator!: MatPaginator;\n  public sort!: MatSort;\n  constructor(\n    private purchasesService: PurchasesService,\n    private productsService: ProductsService\n  ) {}\n\n  ngOnInit(): void {\n    this.getData();\n    this.getProductos();\n  }\n\n  getData() {\n    this.purchasesService.listPurchases().subscribe((datos) => {\n      console.log(datos);\n\n      this.datos = JSON.parse(JSON.stringify(datos))\n        .response as Array<ResponsePurchase>;\n      this.dataSource = this.datos;\n    });\n  }\n  getProductos() {\n    this.productsService.listProducts().subscribe((datos) => {\n      this.ordenes = JSON.parse(JSON.stringify(datos)).response;\n    });\n  }\n  savePurchase() {\n    if (this.userForm.valid) {\n      const purchase = this.userForm.value;\n      //console.logpurchase);\n\n      this.purchasesService.addPurchases(purchase).subscribe((response) => {\n        //console.logresponse);\n        // this.router.navigate(['./admin/products']);\n        this.getData();\n        this.userForm.reset();\n      });\n    }\n  }\n  public applyFilter(): void {\n    // this.dataSource.includes(this.nameFilter.toLowerCase());\n    this.dataSource = this.datos.filter(\n      (i) =>\n        i.PROVEEDOR.toString().includes(this.nameFilter) ||\n        i.MENSAJE.toLowerCase().includes(this.nameFilter) ||\n        i.ID_ORDEN_COMPRA.toString().includes(this.nameFilter) ||\n        i.ID_PRODUCTO.toString().includes(this.nameFilter) ||\n        i.FECHA.toString().includes(this.nameFilter)\n    );\n  }\n  deleteProduct(id: number) {\n    let data = {\n      purchaseid: id,\n    };\n    //console.logdata);\n\n    this.purchasesService.deletePurchases(data).subscribe((rpta) => {\n      this.getData();\n      // //console.logrpta);\n      // const index = this.dataSource.findIndex((orden) => {\n      //   orden.ID_PRODUCTO == id;\n      // });\n      // this.dataSource.splice(index, 1);\n      // this.dataSource = [...this.dataSource];\n    });\n  }\n\n  exportexcel() {\n    new ExportExcelPipe().transform('orden-compra.xlsx', 'excel-ordencompra');\n  }\n}\n","<div class=\"container\">\n  <div class=\"content\">\n    <div class=\"botones\">\n      <button\n        (click)=\"exportexcel()\"\n        id=\"excel-ordencompra\"\n        class=\"btn-color\"\n        mat-raised-button\n      >\n        Exportar Datos\n      </button>\n    </div>\n    <div class=\"formulario\">\n      <form [formGroup]=\"userForm\" (ngSubmit)=\"savePurchase()\">\n        <mat-card class=\"formu\">\n          <mat-card-header>\n            <mat-card-title>Agregar Orden de Compra</mat-card-title>\n          </mat-card-header>\n          <mat-card-content class=\"Formcontent\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Modelo ID</mat-label>\n              <input\n                placeholder=\"Modelo ID\"\n                formControlName=\"modeloid\"\n                matInput\n                type=\"number\"\n              />\n            </mat-form-field>\n\n            <!-- <mat-form-field appearance=\"fill\">\n              <mat-label>Product ID</mat-label>\n              <input\n                placeholder=\"Product ID\"\n                formControlName=\"productid\"\n                matInput\n                type=\"number\"\n              />\n            </mat-form-field> -->\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Producto</mat-label>\n              <mat-select formControlName=\"productid\">\n                <mat-option\n                  *ngFor=\"let item of ordenes\"\n                  [value]=\"item.ID_PRODUCTO\"\n                >\n                  {{ item.NOMBRE_PRODUCTO }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Proveedor</mat-label>\n              <input\n                placeholder=\"Proveedor\"\n                formControlName=\"proovedor\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Mensaje</mat-label>\n              <input\n                placeholder=\"Mensaje\"\n                formControlName=\"mensaje\"\n                matInput\n                type=\"text\"\n              />\n            </mat-form-field>\n          </mat-card-content>\n          <mat-card-actions>\n            <button\n              [disabled]=\"userForm.invalid\"\n              mat-raised-button\n              type=\"submit\"\n            >\n              Enviar\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </form>\n    </div>\n    <div class=\"lista\">\n      <h1>Lista de Ordenes de Compra</h1>\n      <div class=\"filter\">\n        <mat-form-field>\n          <mat-label>Filtrar</mat-label>\n          <input\n            matInput\n            (keyup)=\"applyFilter()\"\n            [(ngModel)]=\"nameFilter\"\n            placeholder=\"Filtrar\"\n            #input\n          />\n        </mat-form-field>\n      </div>\n\n      <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n          <!-- ID Column -->\n          <ng-container matColumnDef=\"PROVEEDOR\">\n            <th mat-header-cell *matHeaderCellDef>PROVEEDOR</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.PROVEEDOR }}</td>\n          </ng-container>\n\n          <!-- Progress Column -->\n          <ng-container matColumnDef=\"MENSAJE\">\n            <th mat-header-cell *matHeaderCellDef>MENSAJE</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.MENSAJE }}</td>\n          </ng-container>\n\n          <!-- Name Column -->\n          <ng-container matColumnDef=\"ID_ORDEN_COMPRA\">\n            <th mat-header-cell *matHeaderCellDef>ID_ORDEN_COMPRA</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.ID_ORDEN_COMPRA }}</td>\n          </ng-container>\n\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"ID_PRODUCTO\">\n            <th mat-header-cell *matHeaderCellDef>ID_PRODUCTO</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.ID_PRODUCTO }}</td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"ID_RESULTADO_MODELO\">\n            <th mat-header-cell *matHeaderCellDef>ID_RESULTADO_MODELO</th>\n            <td mat-cell *matCellDef=\"let row\">\n              {{ row.ID_RESULTADO_MODELO }}\n            </td>\n          </ng-container>\n          <!-- Fruit Column -->\n          <ng-container matColumnDef=\"FECHA\">\n            <th mat-header-cell *matHeaderCellDef>FECHA</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.FECHA }}</td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"OPCIONES\">\n            <th mat-header-cell *matHeaderCellDef>OPCIONES</th>\n            <td mat-cell *matCellDef=\"let row\">\n              <button\n                mat-raised-button\n                color=\"warn\"\n                (click)=\"deleteProduct(row.ID_ORDEN_COMPRA)\"\n              >\n                Eliminar\n              </button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n        </table>\n\n        <mat-paginator\n          [pageSizeOptions]=\"[5, 10, 25, 100]\"\n          showFirstLastButtons\n        ></mat-paginator>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\n\nimport { HttpClient } from '@angular/common/http';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UsuariosService } from 'src/app/src/shared/services/usuarios/usuarios.service';\n@Component({\n  selector: 'app-modal-usuario-edit',\n  templateUrl: './modal-usuario-edit.component.html',\n  styleUrls: ['./modal-usuario-edit.component.scss'],\n})\nexport class ModalUsuarioEditComponent implements OnInit {\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public dialogRef: MatDialogRef<ModalUsuarioEditComponent>,\n    private http: HttpClient,\n    private usuariosService: UsuariosService\n  ) {}\n  hide = true;\n  editForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl(''),\n    nombre: new FormControl(''),\n    apellido: new FormControl(''),\n    userType: new FormControl(''),\n  });\n\n  ngOnInit(): void {\n    //console.logthis.data);\n\n    this.editForm.patchValue({\n      username: this.data.USERNAME,\n      nombre: this.data.NOMBRE,\n      apellido: this.data.APELLIDO,\n      userType: this.data.ID_ROL,\n    });\n  }\n  editUser(event: Event) {\n    event.preventDefault();\n    if (this.editForm.valid) {\n      const user = this.editForm.value;\n\n      //console.logthis.data.ID_USUARIO);\n      user['userid'] = this.data.ID_USUARIO;\n      //console.loguser);\n\n      this.usuariosService.editUser(user).subscribe((response) => {\n        if (response) {\n          this.dialogRef.close(true);\n        } else {\n          this.dialogRef.close(false);\n        }\n      });\n    }\n  }\n}\n","<div class=\"formulario\">\n    <form [formGroup]=\"editForm\"  (ngSubmit)=\"editUser($event)\">\n      <mat-card class=\"formu\">\n        <mat-card-header>\n          <mat-card-title>Editar Usuario</mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"Formcontent\">\n         \n              <mat-form-field appearance=\"fill\">\n                <mat-label>Usuario</mat-label>\n                <input placeholder=\"Usuario\" formControlName=\"username\" matInput type=\"text\">\n              </mat-form-field>\n              <mat-form-field appearance=\"fill\">\n                <mat-label>Contraseña</mat-label>\n                <input placeholder=\"password\" formControlName=\"password\" matInput type=\"text\">\n              </mat-form-field>\n          \n          <!-- <mat-form-field appearance=\"fill\">\n            <mat-label>Enter your password</mat-label>\n            <input matInput [type]=\"hide ? 'password' : 'text'\">\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n          </mat-form-field> -->\n          \n              <mat-form-field  appearance=\"fill\">\n                <mat-label>Nombre</mat-label>\n                <input placeholder=\"Nombre\" formControlName=\"nombre\" matInput type=\"text\">\n              </mat-form-field>\n          \n        \n              <mat-form-field  appearance=\"fill\">\n                <mat-label>Apellidos</mat-label>\n                <input placeholder=\"Apellido\" formControlName=\"apellido\" matInput type=\"text\">\n              </mat-form-field>\n          \n        \n              <mat-form-field appearance=\"fill\">\n                <mat-label>Tipo de Usuario</mat-label>\n                <input placeholder=\"Tipo de usuario\" formControlName=\"userType\" matInput type=\"text\">\n              </mat-form-field>\n          \n         \n         \n        </mat-card-content>\n        <mat-card-actions>\n          <button [disabled]=\"editForm.invalid\" mat-raised-button type=\"submit\">Guardar</button>\n        </mat-card-actions>\n      </mat-card>\n      \n    </form>\n  </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./src/auth/auth.module\": \"OnTU\",\n\t\"./src/featured-modules/featured-modules.module\": \"uAqp\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"zn8P\";\nmodule.exports = webpackAsyncContext;"],"sourceRoot":"webpack:///"}